// <auto-generated />
using System;
using DinamicaXP.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DinamicaXP.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DinamicaXP.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ContaId")
                        .HasColumnType("int")
                        .HasColumnName("conta_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("DinamicaXP.Models.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<decimal>("SaldoDevido")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("saldo_devido");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_pago");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("contas", (string)null);
                });

            modelBuilder.Entity("DinamicaXP.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data");

                    b.Property<bool>("Pago")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("pago");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("pagamentos", (string)null);
                });

            modelBuilder.Entity("DinamicaXP.Models.Conta", b =>
                {
                    b.HasOne("DinamicaXP.Models.Cliente", "Cliente")
                        .WithOne("Conta")
                        .HasForeignKey("DinamicaXP.Models.Conta", "ClienteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DinamicaXP.Models.Pagamento", b =>
                {
                    b.HasOne("DinamicaXP.Models.Cliente", "Cliente")
                        .WithMany("Pagamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DinamicaXP.Models.Cliente", b =>
                {
                    b.Navigation("Conta");

                    b.Navigation("Pagamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
